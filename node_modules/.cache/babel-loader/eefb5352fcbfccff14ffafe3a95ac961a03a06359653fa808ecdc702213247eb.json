{"ast":null,"code":"var _jsxFileName = \"/Users/claudioiaculo/nytimes-clone/src/context/AppContext.js\",\n  _s = $RefreshSig$();\n// context/AppContext.js\nimport React, { createContext, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nconst AppProvider = ({\n  children\n}) => {\n  const sections = [\"home\", \"world\", \"us\"\n  // ... altre sezioni\n  ];\n  const formatSection = section => {\n    // Logica per formattare le sezioni se necessario\n    return section;\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      sections,\n      formatSection\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s();\n  return useContext(AppContext);\n};\n_s(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppProvider };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","jsxDEV","_jsxDEV","AppContext","AppProvider","children","sections","formatSection","section","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s","$RefreshReg$"],"sources":["/Users/claudioiaculo/nytimes-clone/src/context/AppContext.js"],"sourcesContent":["// context/AppContext.js\nimport React, { createContext, useContext } from \"react\";\n\nconst AppContext = createContext();\n\nconst AppProvider = ({ children }) => {\n  const sections = [\n    \"home\",\n    \"world\",\n    \"us\",\n    // ... altre sezioni\n  ];\n\n  const formatSection = (section) => {\n    // Logica per formattare le sezioni se necessario\n    return section;\n  };\n\n  return (\n    <AppContext.Provider value={{ sections, formatSection }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppProvider };\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,UAAU,gBAAGJ,aAAa,CAAC,CAAC;AAElC,MAAMK,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACpC,MAAMC,QAAQ,GAAG,CACf,MAAM,EACN,OAAO,EACP;EACA;EAAA,CACD;EAED,MAAMC,aAAa,GAAIC,OAAO,IAAK;IACjC;IACA,OAAOA,OAAO;EAChB,CAAC;EAED,oBACEN,OAAA,CAACC,UAAU,CAACM,QAAQ;IAACC,KAAK,EAAE;MAAEJ,QAAQ;MAAEC;IAAc,CAAE;IAAAF,QAAA,EACrDA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAACC,EAAA,GAlBIX,WAAW;AAoBjB,OAAO,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,OAAOjB,UAAU,CAACG,UAAU,CAAC;AAC/B,CAAC;AAACc,EAAA,CAFWD,gBAAgB;AAI7B,SAASZ,WAAW;AAAG,IAAAW,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}